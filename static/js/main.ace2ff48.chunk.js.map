{"version":3,"sources":["components/Square.js","components/Board.js","components/History.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Square","props","className","winner","onClick","value","Board","i","j","key","this","squares","winnerSquares","handleClick","arr","Array","fill","map","_","renderSquare","Component","History","state","isAscending","setState","listHistory","stepNumber","jumpTo","moves","his","move","desc","reverse","changeSoft","Game","history","xIsNext","newHistory","slice","newSquares","push","winnerS","calculateWinner","concat","length","step","index","status","result","count","pValue","run","checkIndex","start","end","checkRudeVN","startIndex","endIndex","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAEaA,EAAS,SAACC,GACnB,OAAQ,4BAAQC,UAAWD,EAAME,OAAS,uBAAyB,SAAUC,QAAS,kBAAMH,EAAMG,YAAYH,EAAMI,QCA3GC,EAAb,qLAEiBC,EAAGC,GAAI,IAAD,OACf,OACI,kBAAC,EAAD,CAAQC,IAAK,GAAKF,EAAIC,EAClBH,MAAOK,KAAKT,MAAMU,QAAQJ,GAAGC,GAC7BL,OAAQO,KAAKT,MAAMW,cAAcL,GAAGC,GACpCJ,QAAS,kBAAM,EAAKH,MAAMY,YAAYN,EAAGC,QAPzD,+BAYc,IAAD,OACCM,EAAMC,MAAM,IAAIC,KAAK,MAC3B,OACI,6BACKF,EAAIG,KAAI,SAACC,EAAGX,GAAJ,OAAU,yBAAKL,UAAU,YAAYO,IAAKF,GAAIO,EAAIG,KAAI,SAACC,EAAGV,GAAJ,OAAU,EAAKW,aAAaZ,EAAGC,eAhB9G,GAA2BY,aCDdC,EAAb,YAEI,WAAYpB,GAAQ,IAAD,8BACf,4CAAMA,KAEDqB,MAAQ,CACTC,aAAa,GAJF,EAFvB,0EAWQb,KAAKc,SAAS,CACVD,aAAcb,KAAKY,MAAMC,gBAZrC,+BAgBc,IAAD,OACGA,EAAgBb,KAAKY,MAArBC,YADH,EAEuCb,KAAKT,MAAzCwB,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,WAAYC,EAF5B,EAE4BA,OAC7BC,EAAQH,EAAYR,KAAI,SAACY,EAAKC,GAC9B,IAAMC,EAAOD,EAAI,iBACHD,EAAIxB,MADD,qBACmBwB,EAAItB,EADvB,cAC8BsB,EAAIrB,EADlC,KAEb,mBACJ,OACI,wBAAIC,IAAKqB,GACL,4BAAQ5B,UAAYwB,IAAeI,EAAQ,aAAe,GAAI1B,QAAS,kBAAMuB,EAAOG,KAAQC,OAOxG,OAAQ,6BACJ,4BAAMR,EAAaK,EAAMA,EAAMI,WAC/B,4BAAQ5B,QAAS,kBAAM,EAAK6B,eAAeV,EAAc,YAAc,mBAlCnF,GAA6BH,aCEhBc,EAAb,YACI,WAAYjC,GAAQ,IAAD,8BACf,4CAAMA,KACDqB,MAAQ,CACTa,QAAS,CAAC,CAAE9B,MAAO,KAAME,EAAG,KAAMC,EAAG,OACrCkB,WAAY,EACZU,SAAS,EACTjC,OAAQ,KACRS,cAAeG,MAAM,IAAIC,KAAKD,MAAM,IAAIC,KAAK,OAC7CL,QAASI,MAAM,IAAIC,KAAKD,MAAM,IAAIC,KAAK,QAR5B,EADvB,yEAagBT,EAAGC,GAAI,IAAD,EAC4CE,KAAKY,MAAvDnB,EADM,EACNA,OAAQgC,EADF,EACEA,QAAST,EADX,EACWA,WAAYU,EADvB,EACuBA,QAASzB,EADhC,EACgCA,QAExC0B,EAAaF,EAAQG,MAAM,EAAGZ,EAAa,GAC7Ca,EAAa,GAIjB,GAHA5B,EAAQM,KAAI,SAAAZ,GAAK,OAAIkC,EAAWC,KAAKnC,EAAMiC,aAGvCnC,IAAUoC,EAAWhC,GAAGC,GAA5B,CACA+B,EAAWhC,GAAGC,GAAK4B,EAAU,IAAM,IACnC,IAAMK,EAAUC,EAAgBnC,EAAGC,EAAG+B,GACtC7B,KAAKc,SAAS,CACVW,QAASE,EAAWM,OAAO,CAAEtC,MAAO+B,EAAU,IAAM,IAAK7B,IAAGC,MAC5D4B,SAAUA,EACVjC,OAAQsC,EAAQlC,GAAGC,GACnBI,cAAe6B,EACff,WAAYW,EAAWO,OACvBjC,QAAS4B,OA9BrB,6BAkCWM,GAAO,IACFV,EAAYzB,KAAKY,MAAjBa,QACJI,EAAaxB,MAAM,IAAIC,KAAK,MAAMC,KAAI,kBAAMF,MAAM,IAAIC,KAAK,SAE/D,GAAI6B,EAAO,EACP,IAAK,IAAIC,EAAQ,EAAGA,GAASD,EAAMC,IAAS,CACxC,IAAMjB,EAAMM,EAAQW,GACpBP,EAAWV,EAAItB,GAAGsB,EAAIrB,GAAKqB,EAAIxB,MAIvC,IAAIyC,EAAQX,EAAQU,GACdJ,EAAUC,EAAgBI,EAAMvC,GAAK,EAAGuC,EAAMtC,GAAK,EAAG+B,GAG5D7B,KAAKc,SAAS,CACVb,QAAS4B,EACTb,WAAYmB,EACZT,QAAUS,EAAO,IAAO,EACxB1C,OAAQsC,EAAQK,EAAMvC,GAAK,GAAGuC,EAAMtC,GAAK,GACzCI,cAAe6B,MAtD3B,+BA0Dc,IAEFM,EAFC,SACoErC,KAAKY,MAAtEa,EADH,EACGA,QAAShC,EADZ,EACYA,OAAQiC,EADpB,EACoBA,QAASzB,EAD7B,EAC6BA,QAASe,EADtC,EACsCA,WAAYd,EADlD,EACkDA,cAOvD,OAJImC,EADA5C,EACS,WAAaA,EAEb,iBAAmBiC,EAAU,IAAM,KAG5C,yBAAKlC,UAAU,QACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAOS,QAASA,EAASC,cAAeA,EAAeC,YAAa,SAACN,EAAGC,GAAJ,OAAU,EAAKK,YAAYN,EAAGC,OAEtG,yBAAKN,UAAU,aACX,6BAAM6C,GACN,kBAAC,EAAD,CAAStB,YAAaU,EAAST,WAAYA,EAAYC,OAAQ,SAACG,GAAD,OAAU,EAAKH,OAAOG,YAzEzG,GAA0BV,aAiFpBsB,EAAkB,SAACnC,EAAGC,EAAGG,GAC3B,IAAIqC,EAASjC,MAAM,IAAIC,KAAK,MAAMC,KAAI,kBAAMF,MAAM,IAAIC,KAAK,SAEvDiC,EAAQ,EACNC,EAASvC,EAAQJ,GAAGC,GACtBsC,EAAQ,CAAEvC,EAAGA,EAAGC,EAAIA,EAAI,EAAI,EAAK,EAAIA,EAAI,GAE7C,IAAK0C,EACD,OAAOF,EAGX,KAAOF,EAAMtC,GAAKA,GAAG,CAEjB,IADA,IAAI2C,EAAM,CAAE5C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,GAC1ByC,EAAQ,GAAG,CAEd,IAAKG,EAAWD,IAAQD,IAAWvC,EAAQwC,EAAI5C,GAAG4C,EAAI3C,GAAI,CACtDyC,EAAQ,EACR,MAEJE,EAAI3C,IACJyC,IAGJ,GAAc,IAAVA,EAAa,CACb,IAAMI,EAAQ,CAAE9C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,EAAI,GACnC8C,EAAM,CAAE/C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,EAAI,GACvC,GAAI+C,EAAY5C,EAAS0C,EAAOC,EAAKR,GAAQ,CACzC,KAAOG,EAAQ,GACXD,EAAOF,EAAMvC,GAAGuC,EAAMtC,GAAKG,EAAQJ,GAAGC,GACtCsC,EAAMtC,IACNyC,IAEJ,OAAOD,EAEPC,EAAQ,EAIhBH,EAAMtC,IAMV,IADAsC,EAAQ,CAAEvC,EAAIA,EAAI,EAAI,EAAK,EAAIA,EAAI,EAAGC,EAAGA,GAClCsC,EAAMvC,GAAKA,GAAG,CAEjB,IADA,IAAI4C,EAAM,CAAE5C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,GAC1ByC,EAAQ,GAAG,CACd,IAAKG,EAAWD,IAAQxC,EAAQJ,GAAGC,KAAOG,EAAQwC,EAAI5C,GAAG4C,EAAI3C,GAAI,CAC7DyC,EAAQ,EACR,MAEJE,EAAI5C,IACJ0C,IAGJ,GAAc,IAAVA,EAAa,CACb,IAAMI,EAAQ,CAAE9C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,GACnC8C,EAAM,CAAE/C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,GACvC,GAAI+C,EAAY5C,EAAS0C,EAAOC,EAAKR,GAAQ,CACzC,KAAOG,EAAQ,GACXD,EAAOF,EAAMvC,GAAGuC,EAAMtC,GAAKG,EAAQJ,GAAGC,GACtCsC,EAAMvC,IACN0C,IAEJ,OAAOD,EAGPC,EAAQ,EAKhBH,EAAMvC,IAcV,IATQuC,EAFJ,GAAKvC,EAAI,GAAKC,EAAI,EACd,GAAKD,EAAIC,EACD,CAAED,EAAG,GAAIC,EAAGA,EAAI,GAAKD,GAGrB,CAAEA,EAAGA,EAAIC,EAAGA,EAAG,GAGnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GAGxBsC,EAAMtC,GAAKA,GAAG,CAEjB,IADA,IAAI2C,EAAM,CAAE5C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,GAC1ByC,EAAQ,GAAG,CACd,IAAKG,EAAWD,IAAQxC,EAAQJ,GAAGC,KAAOG,EAAQwC,EAAI5C,GAAG4C,EAAI3C,GAAI,CAC7DyC,EAAQ,EACR,MAEJE,EAAI5C,IACJ4C,EAAI3C,IACJyC,IAIJ,GAAc,IAAVA,EAAa,CACb,IAAMI,EAAQ,CAAE9C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,EAAI,GACvC8C,EAAM,CAAE/C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,EAAI,GAC3C,GAAI+C,EAAY5C,EAAS0C,EAAOC,EAAKR,GAAQ,CACzC,KAAOG,EAAQ,GACXD,EAAOF,EAAMvC,GAAGuC,EAAMtC,GAAKG,EAAQJ,GAAGC,GACtCsC,EAAMvC,IACNuC,EAAMtC,IACNyC,IAEJ,OAAOD,EAGPC,EAAQ,EAEhBH,EAAMvC,IACNuC,EAAMtC,IAeV,IATQsC,EAFJvC,EAAI,GAAKC,EAAI,EACTD,EAAIC,EACI,CAAED,EAAG,EAAGC,EAAGA,EAAID,GAGf,CAAEA,EAAGA,EAAIC,EAAGA,EAAG,GAGnB,CAAED,EAAGA,EAAI,EAAGC,EAAGA,EAAI,GAGxBsC,EAAMtC,GAAKA,GAAG,CAEjB,IADA,IAAI2C,EAAM,CAAE5C,EAAGuC,EAAMvC,EAAGC,EAAGsC,EAAMtC,GAC1ByC,EAAQ,GAAG,CACd,IAAKG,EAAWD,IAAQxC,EAAQJ,GAAGC,KAAOG,EAAQwC,EAAI5C,GAAG4C,EAAI3C,GAAI,CAC7DyC,EAAQ,EACR,MAEJE,EAAI5C,IACJ4C,EAAI3C,IACJyC,IAGJ,GAAc,IAAVA,EAAa,CACb,IAAMI,EAAQ,CAAE9C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,EAAI,GACvC8C,EAAM,CAAE/C,EAAGuC,EAAMvC,EAAI,EAAGC,EAAGsC,EAAMtC,EAAI,GAC3C,GAAI+C,EAAY5C,EAAS0C,EAAOC,EAAKR,GAAQ,CACzC,KAAOG,EAAQ,GACXD,EAAOF,EAAMvC,GAAGuC,EAAMtC,GAAKG,EAAQJ,GAAGC,GACtCsC,EAAMvC,IACNuC,EAAMtC,IACNyC,IAEJ,OAAOD,EAGPC,EAAQ,EAEhBH,EAAMvC,IACNuC,EAAMtC,IAEV,OAAOwC,GAGLI,EAAa,SAACN,GAChB,OAAIA,EAAMvC,GAAK,GAAKuC,EAAMvC,EAAI,IAAMuC,EAAMtC,GAAK,GAAKsC,EAAMtC,EAAI,IAO5D+C,EAAc,SAAC5C,EAAS6C,EAAYC,EAAUX,GAChD,GAAIU,EAAWjD,GAAK,GAAKiD,EAAWjD,EAAI,IAAMkD,EAASlD,GAAK,GAAKiD,EAAWhD,EAAI,GAAI,CAChF,IAAM6C,EAAQ1C,EAAQ6C,EAAWjD,GAAGiD,EAAWhD,GACzC8C,EAAM3C,EAAQ8C,EAASlD,GAAGkD,EAASjD,GACnCH,EAAQM,EAAQmC,EAAMvC,GAAGuC,EAAMtC,GACrC,GAAI6C,GAASC,GACLjD,IAAUgD,GAAShD,IAAUiD,EAC7B,OAAO,EAGnB,OAAO,GCjQII,MANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ace2ff48.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Square = (props) => {\r\n    return (<button className={props.winner ? \"square square-winner\" : \"square\"} onClick={() => props.onClick()}>{props.value}</button>)\r\n}\r\n//{(props.winner) ?  : \"square square-winner\"}","import React, { Component } from 'react'\r\nimport { Square } from './Square'\r\n\r\nexport class Board extends Component {\r\n\r\n    renderSquare(i, j) {\r\n        return (\r\n            <Square key={20 * i + j}\r\n                value={this.props.squares[i][j]}\r\n                winner={this.props.winnerSquares[i][j]}\r\n                onClick={() => this.props.handleClick(i, j)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const arr = Array(20).fill(null)\r\n        return (\r\n            <div>\r\n                {arr.map((_, i) => <div className=\"board-row\" key={i}>{arr.map((_, j) => this.renderSquare(i, j))}</div>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nexport class History extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAscending: false        }\r\n    }\r\n\r\n    changeSoft() {\r\n\r\n        this.setState({\r\n            isAscending: !this.state.isAscending\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { isAscending } = this.state;\r\n        const { listHistory, stepNumber, jumpTo } = this.props;\r\n        let moves = listHistory.map((his, move) => {\r\n            const desc = move ?\r\n                `value: ${his.value}; index: (${his.i} : ${his.j})` :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button className={(stepNumber === move) ? \"btn-active\" : \"\"} onClick={() => jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n\r\n\r\n        return (<div>\r\n            <ol>{(isAscending)?moves:moves.reverse()}</ol>\r\n            <button onClick={() => this.changeSoft()}>{isAscending ? \"ascending\" : \"decreasing\"}</button>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Board } from \"./Board\";\r\nimport { History } from './History'\r\n\r\nexport class Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{ value: null, i: null, j: null }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            winner: null,\r\n            winnerSquares: Array(20).fill(Array(20).fill(null)),\r\n            squares: Array(20).fill(Array(20).fill(null))\r\n        };\r\n    }\r\n\r\n    handleClick(i, j) {\r\n        const { winner, history, stepNumber, xIsNext, squares } = this.state;\r\n\r\n        const newHistory = history.slice(0, stepNumber + 1)\r\n        let newSquares = [];\r\n        squares.map(value => newSquares.push(value.slice()));\r\n\r\n\r\n        if (winner || newSquares[i][j]) return;\r\n        newSquares[i][j] = xIsNext ? 'X' : 'O';\r\n        const winnerS = calculateWinner(i, j, newSquares)\r\n        this.setState({\r\n            history: newHistory.concat({ value: xIsNext ? 'X' : 'O', i, j }),\r\n            xIsNext: !xIsNext,\r\n            winner: winnerS[i][j],\r\n            winnerSquares: winnerS,\r\n            stepNumber: newHistory.length,\r\n            squares: newSquares\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        const { history } = this.state\r\n        let newSquares = Array(20).fill(null).map(() => Array(20).fill(null))\r\n\r\n        if (step > 0) {\r\n            for (let index = 1; index <= step; index++) {\r\n                const his = history[index]\r\n                newSquares[his.i][his.j] = his.value\r\n            }\r\n        }\r\n\r\n        var index = history[step]\r\n        const winnerS = calculateWinner(index.i || 0, index.j || 0, newSquares)\r\n\r\n\r\n        this.setState({\r\n            squares: newSquares,\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n            winner: winnerS[index.i || 0][index.j || 0],\r\n            winnerSquares: winnerS\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { history, winner, xIsNext, squares, stepNumber, winnerSquares } = this.state;\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n        }\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={squares} winnerSquares={winnerSquares} handleClick={(i, j) => this.handleClick(i, j)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <History listHistory={history} stepNumber={stepNumber} jumpTo={(move) => this.jumpTo(move)} />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst calculateWinner = (i, j, squares) => {\r\n    let result = Array(20).fill(null).map(() => Array(20).fill(null))\r\n\r\n    let count = 0;\r\n    const pValue = squares[i][j]\r\n    let index = { i: i, j: (j - 4 < 0) ? 0 : j - 4 }\r\n\r\n    if (!pValue)\r\n        return result\r\n\r\n    //check row\r\n    while (index.j <= j) {\r\n        let run = { i: index.i, j: index.j }\r\n        while (count < 5) {\r\n\r\n            if (!checkIndex(run) || pValue !== squares[run.i][run.j]) {\r\n                count = 0\r\n                break\r\n            }\r\n            run.j++\r\n            count++\r\n        }\r\n\r\n        if (count === 5) {\r\n            const start = { i: index.i, j: index.j - 1 }\r\n            const end = { i: index.i, j: index.j + 5 }\r\n            if (checkRudeVN(squares, start, end, index)) {\r\n                while (count > 0) {\r\n                    result[index.i][index.j] = squares[i][j]\r\n                    index.j++;\r\n                    count--;\r\n                }\r\n                return result\r\n            } else {\r\n                count = 0\r\n            }\r\n        }\r\n\r\n        index.j++;\r\n\r\n    }\r\n\r\n    //check column\r\n    index = { i: (i - 4 < 0) ? 0 : i - 4, j: j }\r\n    while (index.i <= i) {\r\n        let run = { i: index.i, j: index.j }\r\n        while (count < 5) {\r\n            if (!checkIndex(run) || squares[i][j] !== squares[run.i][run.j]) {\r\n                count = 0\r\n                break\r\n            }\r\n            run.i++\r\n            count++\r\n        }\r\n\r\n        if (count === 5) {\r\n            const start = { i: index.i - 1, j: index.j }\r\n            const end = { i: index.i + 5, j: index.j }\r\n            if (checkRudeVN(squares, start, end, index)) {\r\n                while (count > 0) {\r\n                    result[index.i][index.j] = squares[i][j];\r\n                    index.i++;\r\n                    count--;\r\n                }\r\n                return result\r\n            }\r\n            else\r\n                count = 0\r\n\r\n\r\n\r\n        }\r\n        index.i++;\r\n    }\r\n    //check diagonal up right\r\n    if (19 - i < 4 || j < 4) {\r\n        if (19 - i < j) {\r\n            index = { i: 19, j: j - 19 + i }\r\n        }\r\n        else {\r\n            index = { i: i + j, j: 0 }\r\n        }\r\n    } else {\r\n        index = { i: i + 4, j: j - 4 }\r\n    }\r\n\r\n    while (index.j <= j) {\r\n        let run = { i: index.i, j: index.j }\r\n        while (count < 5) {\r\n            if (!checkIndex(run) || squares[i][j] !== squares[run.i][run.j]) {\r\n                count = 0\r\n                break\r\n            }\r\n            run.i--;\r\n            run.j++;\r\n            count++\r\n        }\r\n\r\n\r\n        if (count === 5) {\r\n            const start = { i: index.i + 1, j: index.j - 1 }\r\n            const end = { i: index.i - 5, j: index.j + 5 }\r\n            if (checkRudeVN(squares, start, end, index)) {\r\n                while (count > 0) {\r\n                    result[index.i][index.j] = squares[i][j];\r\n                    index.i--;\r\n                    index.j++;\r\n                    count--;\r\n                }\r\n                return result\r\n            }\r\n            else\r\n                count = 0\r\n        }\r\n        index.i--;\r\n        index.j++;\r\n    }\r\n\r\n    // //check diagonal down right\r\n    if (i < 4 || j < 4) {\r\n        if (i < j) {\r\n            index = { i: 0, j: j - i }\r\n        }\r\n        else {\r\n            index = { i: i - j, j: 0 }\r\n        }\r\n    } else {\r\n        index = { i: i - 4, j: j - 4 }\r\n    }\r\n\r\n    while (index.j <= j) {\r\n        let run = { i: index.i, j: index.j }\r\n        while (count < 5) {\r\n            if (!checkIndex(run) || squares[i][j] !== squares[run.i][run.j]) {\r\n                count = 0\r\n                break\r\n            }\r\n            run.i++;\r\n            run.j++;\r\n            count++\r\n        }\r\n\r\n        if (count === 5) {\r\n            const start = { i: index.i - 1, j: index.j - 1 }\r\n            const end = { i: index.i + 5, j: index.j + 5 }\r\n            if (checkRudeVN(squares, start, end, index)) {\r\n                while (count > 0) {\r\n                    result[index.i][index.j] = squares[i][j];\r\n                    index.i++;\r\n                    index.j++;\r\n                    count--;\r\n                }\r\n                return result\r\n            }\r\n            else\r\n                count = 0\r\n        }\r\n        index.i++;\r\n        index.j++;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst checkIndex = (index) => {\r\n    if (index.i >= 0 && index.i < 20 && index.j >= 0 && index.j < 20) {\r\n        return true\r\n    }\r\n    return false\r\n\r\n}\r\n\r\nconst checkRudeVN = (squares, startIndex, endIndex, index) => {\r\n    if (startIndex.i >= 0 && startIndex.i < 20 && endIndex.i >= 0 && startIndex.j < 20) {\r\n        const start = squares[startIndex.i][startIndex.j]\r\n        const end = squares[endIndex.i][endIndex.j]\r\n        const value = squares[index.i][index.j]\r\n        if (start && end)\r\n            if (value !== start && value !== end) {\r\n                return false\r\n            }\r\n    }\r\n    return true\r\n}","import React from 'react';\nimport {Game} from './components/Game'\n\nfunction App() {\n  return (\n    <Game></Game>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}